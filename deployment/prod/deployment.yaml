apiVersion: v1
kind: Namespace
metadata:
  name: itsweatheroutside

# MongoDB
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo
  namespace: itsweatheroutside
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo
  namespace: itsweatheroutside
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo
        imagePullPolicy: "IfNotPresent"
        args: ["--dbpath","/data/db"]
        volumeMounts:
        - name: "mongo-data-dir"
          mountPath: "/data/db"
      volumes:
      - name: "mongo-data-dir"
        persistentVolumeClaim:
          claimName: "mongo"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo
  namespace: itsweatheroutside
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
   name: itsweatheroutside
   namespace: itsweatheroutside
spec:
   replicas: 1
   selector:
      matchLabels:
         app: itsweatheroutside
   template:
      metadata:
         labels:
            app: itsweatheroutside
      spec:
         containers:
            - name: itsweatheroutside
              image: localhost:5000/itsweatheroutside:latest
              imagePullPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
   name: itsweatheroutside
   namespace: itsweatheroutside
spec:
   type: LoadBalancer
   selector:
      app: itsweatheroutside
   ports:
      - port: 3001
        targetPort: 3001
        
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: "nginx"    
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
  name: itsweatheroutside
  namespace: itsweatheroutside
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - itsweatheroutside.com
    - www.itsweatheroutside.com
    secretName: www-itsweatheroutside-com
  rules:
  - host: www.itsweatheroutside.com
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: itsweatheroutside
            port:
              number: 3001
